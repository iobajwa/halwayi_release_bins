<?xml version="1.0" encoding="utf-8"?>

<!--
Copyright Bhavnit Singh Bajwa   iobajwa@gmail.com
Please refer to Halwayi's license agreement for more details
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">


  <!--
  ************************************************************************************************************************
                                                  Properties Utilized
  ************************************************************************************************************************
  -->






  <!-- 
  ************************************************************************************************************************
                                              Include External Dependencies
  ************************************************************************************************************************
  -->

  <UsingTask AssemblyFile= "$(BuilderTasksPath)\halwayiTasks.dll" TaskName= "StandinGeneratorTask" />
  <UsingTask AssemblyFile= "$(BuilderTasksPath)\halwayiTasks.dll" TaskName= "FindMatchingMetadataTask" />
  <UsingTask AssemblyFile= "$(BuilderTasksPath)\halwayiTasks.dll" TaskName= "MetadataContainsEntryTask" />
  <UsingTask AssemblyFile= "$(BuilderTasksPath)\halwayiTasks.dll" TaskName= "MetadataAppendEntryTask" />
  <UsingTask AssemblyFile= "$(BuilderTasksPath)\halwayiTasks.dll" TaskName= "CreateStubsInParallelTask" />
  <UsingTask AssemblyFile= "$(BuilderTasksPath)\halwayiTasks.dll" TaskName= "StubManagementGeneratorTask" />
  





  <!--
  ************************************************************************************************************************
                                                     Internal Targets
  ************************************************************************************************************************
  -->

  <Target Name="_GenerateAnyRequiredCStandins" DependsOnTargets="_DiscoverStandinFiles;">
  </Target>


  <Target Name="_DiscoverStandinFiles">
    <ItemGroup Condition="'$(BuildGhostAlso)' == 'true'">
      <StandinSearchPaths Include="@(GhostIncludedPathsItem)" />
    </ItemGroup>
    <ItemGroup Condition="'$(BuildNativeAlso)' == 'true'">
      <StandinSearchPaths Include="@(NativeIncludedPathsItem)" />
    </ItemGroup>
    <PropertyGroup Condition="'$(BuildGhostAlso)' == 'true'">
      <StandinOutputPath>$(StandinGhostRoot)</StandinOutputPath>
    </PropertyGroup>
    <PropertyGroup Condition="'$(BuildNativeAlso)' == 'true'">
      <StandinOutputPath>$(StandinNativeRoot)</StandinOutputPath>
    </PropertyGroup>

    <StandinGeneratorTask IncludedFiles="@(IncludedFilesItem)" PrefixesToIgnore="$(StubPrefix);$(MockPrefix);"
                          SearchPaths="@(StandinSearchPaths)" OutputPath="$(StandinOutputPath)" >
      <Output ItemName="StandinsFilesItem" TaskParameter="FoundFiles" />
      <Output PropertyName="StandinsFileCount" TaskParameter="FoundFilesCount" />
    </StandinGeneratorTask>

    <Message Text="@(StandinsFilesItem)" />
    <!-- <Error Text="kaboom!" /> -->
  </Target>


  <Target Name="_DiscoverStubConfigMetadata" Outputs="$(StubPrefix)" Inputs= "%(StandinsFilesItem.Identity)" Condition= " '$(StandinsFileCount)' != '0' ">

    <FindMatchingMetadataTask File="%(StandinsFilesItem.Identity)" RawMetaDataChunks="@(StandinMetaDataItem)">
      <Output PropertyName= "_processedConfigMetaData" TaskParameter= "FoundMetaData" />
    </FindMatchingMetadataTask>

    <ItemGroup>
      <StandinsFilesItem Condition="'%(StandinsFilesItem.Identity)' == '%(Identity)'" >
        <Metadata>$(_processedConfigMetaData)</Metadata>
      </StandinsFilesItem>
    </ItemGroup>
  </Target>

  
  
  <Target Name="_GenerateStubs" DependsOnTargets="_GenerateStubsForGhost;_GenerateStubsForNative" Condition=" '$(StandinsFileCount)' != '0' ">
    <Message Text="Generated $(StandinsFileCount) stub(s)." Importance="Normal" />
  </Target>

  <Target Name= "_GenerateStubsForGhost" Condition="'$(BuildGhostAlso)' == 'true'">
    <CreateStubsInParallelTask StubableFiles="@(StandinsFilesItem)" 
                               Paths="@(GhostIncludedPathsItem)" 
                               TestFile="$(TestFileFullname)" 
                               ToolPath="$(CStubPath)\cstub.exe" 
                               StubPrefix="$(StubPrefix)" 
                               OutputPath="$(CStubGhostRoot)" 
                               MaximumParallelExecutions="$(CoresUsage)" 
                               TimeoutPeriod="3000"
                               CTypesHeader="$(CTypesFile)"
                               />
  </Target>

  <Target Name= "_GenerateStubsForNative" Condition="'$(BuildNativeAlso)' == 'true'">
    <CreateStubsInParallelTask StubableFiles="@(StandinsFilesItem)" 
                               Paths="@(NativeIncludedPathsItem)" 
                               TestFile="$(TestFileFullname)" 
                               ToolPath="$(CStubPath)\cstub.exe" 
                               StubPrefix="$(StubPrefix)" 
                               OutputPath="$(CStubNativeRoot)" 
                               MaximumParallelExecutions="$(CoresUsage)" 
                               CTypesHeader="$(CTypesFile)"
                               TimeoutPeriod="3000" />
  </Target>


  <Target Name="_GenerateStubSetupFiles" DependsOnTargets= "_GenerateStubSetupFilesForGhost;_GenerateStubSetupFilesForNative" />

  <Target Name="_GenerateStubSetupFilesForGhost" Condition= " '$(BuildGhostAlso)' == 'True' " Inputs="$(TestFileFullname)" Outputs="$(CStubGhostRoot)\$(CStubManagementFile)">
    <ItemGroup>
      <GeneratedStubFilesGhost Include= "$(CStubGhostRoot)\**\$(StubPrefix)*.c" />
    </ItemGroup>
    <StubManagementGeneratorTask GeneratedFiles="@(GeneratedStubFilesGhost)" BasePath="$(CStubGhostRoot)" OutputFile="$(CStubGhostRoot)\$(CStubManagementFile)" />
  </Target>

  <Target Name="_GenerateStubSetupFilesForNative" Condition= "$(BuildNativeAlso) == 'True'" Inputs="$(TestFileFullname)" Outputs="$(CStubNativeRoot)\$(CStubManagementFile)">
    <ItemGroup>
      <GeneratedStubFilesNative Include= "$(CStubNativeRoot)\**\$(StubPrefix)*.c" />
    </ItemGroup>
    <StubManagementGeneratorTask GeneratedFiles="@(GeneratedStubFilesNative)" BasePath="$(CStubNativeRoot)" OutputFile="$(CStubNativeRoot)\$(CStubManagementFile)" />
  </Target>


</Project>
